version: "3.8"

services:

  #--------------------------------------------------
  #-------------------- DATABASE --------------------
  #--------------------------------------------------

  database_master:
    image: mysql:8.0.30
    container_name: "database_master"
    restart: unless-stopped
    ports:
      - 3308:3306
    volumes:
      - ./docker/db/db_master_data:/var/lib/mysql
      - ./docker/master.cnf/master.cnf:/etc/my.cnf
      - ./src/db/init/master-init.sql:/docker-entrypoint-initdb.d/master-init.sql
      - ./src/db/structure:/docker-entrypoint-initdb.d/init.mysql
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - cineverse

  database_slave:
    image: mysql:8.0.30
    container_name: "database_slave"
    restart: unless-stopped
    depends_on:
      - database_master
    ports:
      - 3307:3306
    volumes:
      - ./docker/db/db_slave_data:/var/lib/mysql
      - ./docker/slave.cnf/slave.cnf:/etc/my.cnf
      - ./src/db/init-slave/slave-init.sh:/docker-entrypoint-initdb.d/slave-init.sh
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MASTER_HOST=${MASTER_HOST}
      - MASTER_USER=${MASTER_USER}
      - MASTER_PASSWORD=${MASTER_PASSWORD}
    networks:
      - cineverse

  #--------------------------------------------------
  #------------------- SERVER WEB -------------------
  #--------------------------------------------------

  phpyweb:
    image: php:8.0-apache
    volumes:
      - ./src/:/var/www/html
    depends_on:
      - database_master
    ports:
      - "8081:80"
    networks:
      - cineverse
    env_file:
      - .env  
    environment:
      - APACHE_RUN_USER=#33
      - APACHE_RUN_GROUP=#33
    build:
      context: .
      dockerfile: ./docker/apache_conf/dockerfile

  #--------------------------------------------------
  #------------------- MONITOREO --------------------
  #--------------------------------------------------

  prometheus:
    image: prom/prometheus
    container_name: "prometheus"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - cineverse

  grafana:
    image: grafana/grafana
    container_name: "grafana"
    volumes:
      - ./docker/grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - cineverse

  #--------------------------------------------------
  #-------------------- RSYNC -----------------------
  #--------------------------------------------------

  rsync_backup:
    image: alpine:latest
    container_name: rsync_backup
    volumes:
      - ./docker/backups:/backups          # Carpeta para almacenar los respaldos
      - ./docker/db/db_master_data:/data/master  # Datos del maestro
      - ./docker/db/db_slave_data:/data/slave    # Datos del esclavo
      - ./docker/db/binlogs:/data/binlogs        # Logs binarios
      - ./docker/rsync_backup.sh:/rsync_backup.sh  # Script de inicializaci√≥n
    command: sh /rsync_backup.sh
    networks:
      - cineverse

#--------------------------------------------------
#-------------------- NETWORKS --------------------
#--------------------------------------------------

networks:
  cineverse:
    driver: bridge

#--------------------------------------------------
#-------------------- VOLUMES ---------------------
#--------------------------------------------------

volumes:
  grafana_data:
  db_master_data:
  db_slave_data:
